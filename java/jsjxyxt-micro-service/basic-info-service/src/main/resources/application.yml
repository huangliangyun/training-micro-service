
app:
  id: basic-info-service
apollo:
  bootstrap:
    enabled: true
    namespaces: application
  meta: http://49.233.192.8:8080
  cacheDir: /app/war/apollo/temp/

spring:
  application:
    name: basic-info-service
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      username: root
      password: roof
      url: jdbc:mysql://localhost:3306/basicinformationservice?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true
  redis:
    sentinel:
      master: mymaster
      nodes: 106.13.9.117:26379,123.56.219.53:26379,106.13.1.171:26379
    # Redis数据库索引，默认为0
    database: 2
    # Redis服务器地址
    #host: 106.13.9.117
    # Redis服务器连接端口
    #port: 16379
    # Redis密码，默认为空
    password: "!@#redis"
    # Redis连接池最大连接数(负值表示没有限制
    jedis:
      pool:
        max-active: 10
        # 连接池最大阻塞等待时间
        max-wait: -1
        # 连接池最大空闲链接
        max-idle: 10
        # 连接池最小空闲链接
        min-idle: 0
    # 链接超时时间
    timeout: 30000
# 集成Mybatis
mybatis:
  # Mybatis映射
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.javahly.basicinfoservice.entity


eureka:
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      defaultZone: http://49.233.192.8:8761/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
# 端口设置
server:
  port: 8082
  servlet:
    session:
      timeout: 600
# 必须改成这种格式否则无法注册
server.servlet.context-path: /v1/info

security:
  oauth2:
    resource:
      user-info-uri: http://localhost:8081/v1/uaa/oauth/current
    client:
    # 客户端Id ，与OAuth Provider 中的配置一一对应
      clientId: client-servic
      # 客户端密码，与OAuth Provider 中的配置一一对应
      clientSecret: 123456
      # 获取Token的节点
      accessTokenUri: http://localhost:8081/v1/uaa/oauth/token
      grant-type: client_credentials,password
      # 客户端的域
      scope: server